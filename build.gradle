apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group 'com.github.mouse0w0'
version '4.0.0'

sourceCompatibility = targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://maven.aliyun.com/repository/public'
    }
}

dependencies {
    implementation 'net.jodah:typetools:0.6.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = "EventBus"
                description = "Event bus implementation for Java."
                url = "https://github.com/mouse0w0/eventbus"
                licenses {
                    license {
                        name = "BSD 3-Clause License"
                        url = "https://opensource.org/licenses/BSD-3-Clause"
                    }
                }
                developers {
                    developer {
                        name = "Mouse"
                        email = "mouse0w0@qq.com"
                    }
                }
                scm {
                    url = "https://github.com/mouse0w0/eventbus.git"
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.findProperty("ossUsername") ?: System.getenv("USERNAME")
                password = project.findProperty("ossPassword") ?: System.getenv("PASSWORD")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/mouse0w0/eventbus")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
}

signing {
    required {
        gradle.taskGraph.hasTask("publishMavenPublicationToOSSRHRepository")
    }
    sign publishing.publications.maven
}
